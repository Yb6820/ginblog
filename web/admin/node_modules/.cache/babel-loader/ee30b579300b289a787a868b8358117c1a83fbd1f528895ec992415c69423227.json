{"ast":null,"code":"const columns = [{\n  title: 'ID',\n  dataIndex: 'ID',\n  width: '10%',\n  key: 'id',\n  align: 'center'\n}, {\n  title: '用户名',\n  dataIndex: 'username',\n  width: '20%',\n  key: 'username',\n  align: 'center'\n}, {\n  title: '角色',\n  dataIndex: 'role',\n  width: '20%',\n  key: 'role',\n  align: 'center',\n  scopedSlots: {\n    customRender: 'role'\n  }\n}, {\n  title: '操作',\n  width: '30%',\n  key: 'action',\n  align: 'center',\n  scopedSlots: {\n    customRender: 'action'\n  }\n}];\nexport default {\n  data() {\n    return {\n      pagination: {\n        pageSizeOptions: ['5', '10', '20'],\n        defaultCurrent: 1,\n        defaultPageSize: 5,\n        total: 0,\n        showSizeChanger: true,\n        showTotal: total => `共${total}条`\n      },\n      userList: [],\n      columns,\n      queryParam: {\n        username: '',\n        pagesize: 5,\n        pagenum: 1\n      },\n      visible: false\n    };\n  },\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get('users', {\n        params: {\n          // username: this.queryParam.username,\n          pagesize: this.queryParam.pagesize,\n          pagenum: this.queryParam.pagenum\n        }\n      });\n      // console.log(res)\n      if (res.status !== 200) return this.$message.error(res.message);\n      this.userList = res.data;\n      this.pagination.total = res.total;\n    },\n    // 修改分页时触发\n    handleTableChange(pagination, filters, sorter) {\n      const pager = this.pagination;\n      pager.current = pagination.current;\n      pager.pageSize = pagination.pageSize;\n      this.queryParam.pagesize = pagination.pageSize;\n      this.queryParam.pagenum = pagination.current;\n      if (pagination.pageSize !== this.pagination.pageSize) {\n        this.queryParam.pagenum = 1;\n        pager.current = 1;\n      }\n      this.pagination = pager;\n      this.getUserList();\n    },\n    // 删除用户\n    async deleteUser(id) {\n      this.$confirm({\n        title: 'Do you want to delete these items?',\n        content: 'When clicked the OK button, this dialog will be closed after 1 second',\n        onOk() {\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n          }).catch(() => console.log('Oops errors!'));\n        },\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel() {}\n      });\n      const res = await this.$http.delete(`user/${id}`);\n      console.log(res);\n      if (res.status !== 200) return this.$message.error(res.message);\n      this.getUserList();\n    }\n  }\n};","map":{"version":3,"names":["columns","title","dataIndex","width","key","align","scopedSlots","customRender","data","pagination","pageSizeOptions","defaultCurrent","defaultPageSize","total","showSizeChanger","showTotal","userList","queryParam","username","pagesize","pagenum","visible","created","getUserList","methods","res","$http","get","params","status","$message","error","message","handleTableChange","filters","sorter","pager","current","pageSize","deleteUser","id","$confirm","content","onOk","Promise","resolve","reject","setTimeout","Math","random","catch","console","log","onCancel","delete"],"sources":["src/components/user/UserList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h3>用户列表</h3>\r\n        <a-card>\r\n            <a-row :gutter=\"20\">\r\n                <a-col :span=\"6\">\r\n                    <a-input-search\r\n                    v-model=\"queryParam.username\"\r\n                    placeholder=\"输入用户名查找\"\r\n                    enter-button\r\n                    allowClear\r\n                    @search=\"getUserList\"/>\r\n                </a-col>\r\n                <a-col :span=\"4\">\r\n                    <a-button type=\"primary\">新增</a-button>\r\n                </a-col>\r\n            </a-row>\r\n\r\n            <a-table\r\n            :columns=\"columns\"\r\n            :pagination='pagination'\r\n            :dataSource=\"userList\"\r\n            rowKey=\"ID\"\r\n            bordered\r\n            @change=\"handleTableChange\"\r\n            >\r\n            <span slot=\"role\" slot-scope=\"role\">{{ role==1?'管理员':'订阅者' }}</span>\r\n            <template slot=\"action\" slot-scope=\"data\">\r\n                <div class=\"actionSlot\">\r\n                    <a-button type=\"primary\" style=\"margin-right:15px\">编辑</a-button>\r\n                    <a-button type=\"danger\" @click=\"deleteUser(data.ID)\">删除</a-button>\r\n                </div>\r\n            </template>\r\n            </a-table>\r\n        </a-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst columns = [\r\n  {\r\n    title: 'ID',\r\n    dataIndex: 'ID',\r\n    width: '10%',\r\n    key: 'id',\r\n    align: 'center'\r\n  },\r\n  {\r\n    title: '用户名',\r\n    dataIndex: 'username',\r\n    width: '20%',\r\n    key: 'username',\r\n    align: 'center'\r\n  },\r\n  {\r\n    title: '角色',\r\n    dataIndex: 'role',\r\n    width: '20%',\r\n    key: 'role',\r\n    align: 'center',\r\n    scopedSlots: { customRender: 'role' }\r\n  },\r\n  {\r\n    title: '操作',\r\n    width: '30%',\r\n    key: 'action',\r\n    align: 'center',\r\n    scopedSlots: { customRender: 'action' }\r\n  }\r\n]\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      pagination: {\r\n        pageSizeOptions: ['5', '10', '20'],\r\n        defaultCurrent: 1,\r\n        defaultPageSize: 5,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`\r\n      },\r\n      userList: [],\r\n      columns,\r\n      queryParam: {\r\n        username: '',\r\n        pagesize: 5,\r\n        pagenum: 1\r\n      },\r\n      visible: false\r\n    }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    async getUserList () {\r\n      const { data: res } = await this.$http.get('users', {\r\n        params: {\r\n          // username: this.queryParam.username,\r\n          pagesize: this.queryParam.pagesize,\r\n          pagenum: this.queryParam.pagenum\r\n        }\r\n      })\r\n      // console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.userList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n    // 修改分页时触发\r\n    handleTableChange (pagination, filters, sorter) {\r\n      const pager = this.pagination\r\n      pager.current = pagination.current\r\n      pager.pageSize = pagination.pageSize\r\n      this.queryParam.pagesize = pagination.pageSize\r\n      this.queryParam.pagenum = pagination.current\r\n      if (pagination.pageSize !== this.pagination.pageSize) {\r\n        this.queryParam.pagenum = 1\r\n        pager.current = 1\r\n      }\r\n      this.pagination = pager\r\n      this.getUserList()\r\n    },\r\n    // 删除用户\r\n    async deleteUser (id) {\r\n      this.$confirm({\r\n        title: 'Do you want to delete these items?',\r\n        content: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n        onOk () {\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\r\n          }).catch(() => console.log('Oops errors!'))\r\n        },\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        onCancel () { }\r\n      })\r\n      const res = await this.$http.delete(`user/${id}`)\r\n      console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.getUserList()\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.actionSlot{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":"AAuCA,MAAAA,OAAA,IACA;EACAC,KAAA;EACAC,SAAA;EACAC,KAAA;EACAC,GAAA;EACAC,KAAA;AACA,GACA;EACAJ,KAAA;EACAC,SAAA;EACAC,KAAA;EACAC,GAAA;EACAC,KAAA;AACA,GACA;EACAJ,KAAA;EACAC,SAAA;EACAC,KAAA;EACAC,GAAA;EACAC,KAAA;EACAC,WAAA;IAAAC,YAAA;EAAA;AACA,GACA;EACAN,KAAA;EACAE,KAAA;EACAC,GAAA;EACAC,KAAA;EACAC,WAAA;IAAAC,YAAA;EAAA;AACA,EACA;AAEA;EACAC,KAAA;IACA;MACAC,UAAA;QACAC,eAAA;QACAC,cAAA;QACAC,eAAA;QACAC,KAAA;QACAC,eAAA;QACAC,SAAA,EAAAF,KAAA,QAAAA,KAAA;MACA;MACAG,QAAA;MACAhB,OAAA;MACAiB,UAAA;QACAC,QAAA;QACAC,QAAA;QACAC,OAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,MAAAD,YAAA;MACA;QAAAf,IAAA,EAAAiB;MAAA,eAAAC,KAAA,CAAAC,GAAA;QACAC,MAAA;UACA;UACAT,QAAA,OAAAF,UAAA,CAAAE,QAAA;UACAC,OAAA,OAAAH,UAAA,CAAAG;QACA;MACA;MACA;MACA,IAAAK,GAAA,CAAAI,MAAA,sBAAAC,QAAA,CAAAC,KAAA,CAAAN,GAAA,CAAAO,OAAA;MACA,KAAAhB,QAAA,GAAAS,GAAA,CAAAjB,IAAA;MACA,KAAAC,UAAA,CAAAI,KAAA,GAAAY,GAAA,CAAAZ,KAAA;IACA;IACA;IACAoB,kBAAAxB,UAAA,EAAAyB,OAAA,EAAAC,MAAA;MACA,MAAAC,KAAA,QAAA3B,UAAA;MACA2B,KAAA,CAAAC,OAAA,GAAA5B,UAAA,CAAA4B,OAAA;MACAD,KAAA,CAAAE,QAAA,GAAA7B,UAAA,CAAA6B,QAAA;MACA,KAAArB,UAAA,CAAAE,QAAA,GAAAV,UAAA,CAAA6B,QAAA;MACA,KAAArB,UAAA,CAAAG,OAAA,GAAAX,UAAA,CAAA4B,OAAA;MACA,IAAA5B,UAAA,CAAA6B,QAAA,UAAA7B,UAAA,CAAA6B,QAAA;QACA,KAAArB,UAAA,CAAAG,OAAA;QACAgB,KAAA,CAAAC,OAAA;MACA;MACA,KAAA5B,UAAA,GAAA2B,KAAA;MACA,KAAAb,WAAA;IACA;IACA;IACA,MAAAgB,WAAAC,EAAA;MACA,KAAAC,QAAA;QACAxC,KAAA;QACAyC,OAAA;QACAC,KAAA;UACA,WAAAC,OAAA,EAAAC,OAAA,EAAAC,MAAA;YACAC,UAAA,CAAAC,IAAA,CAAAC,MAAA,WAAAJ,OAAA,GAAAC,MAAA;UACA,GAAAI,KAAA,OAAAC,OAAA,CAAAC,GAAA;QACA;QACA;QACAC,SAAA;MACA;MACA,MAAA5B,GAAA,cAAAC,KAAA,CAAA4B,MAAA,SAAAd,EAAA;MACAW,OAAA,CAAAC,GAAA,CAAA3B,GAAA;MACA,IAAAA,GAAA,CAAAI,MAAA,sBAAAC,QAAA,CAAAC,KAAA,CAAAN,GAAA,CAAAO,OAAA;MACA,KAAAT,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}