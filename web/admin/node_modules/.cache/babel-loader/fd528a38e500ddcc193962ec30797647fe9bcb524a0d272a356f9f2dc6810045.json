{"ast":null,"code":"const columns = [{\n  title: 'ID',\n  dataIndex: 'ID',\n  width: '10%',\n  key: 'id',\n  align: 'center'\n}, {\n  title: '用户名',\n  dataIndex: 'username',\n  width: '20%',\n  key: 'username',\n  align: 'center'\n}, {\n  title: '角色',\n  dataIndex: 'role',\n  width: '20%',\n  key: 'role',\n  align: 'center',\n  scopedSlots: {\n    customRender: 'role'\n  }\n}, {\n  title: '操作',\n  width: '30%',\n  key: 'action',\n  align: 'center',\n  scopedSlots: {\n    customRender: 'action'\n  }\n}];\nexport default {\n  data() {\n    return {\n      pagination: {\n        pageSizeOptions: ['5', '10', '20'],\n        defaultCurrent: 1,\n        defaultPageSize: 5,\n        total: 0,\n        showSizeChanger: true,\n        showTotal: total => `共${total}条`\n      },\n      userList: [],\n      columns,\n      queryParam: {\n        username: '',\n        pagesize: 5,\n        pagenum: 1\n      },\n      newuser: {\n        username: '',\n        password: '',\n        checkpass: '',\n        role: 2\n      },\n      userinfo: {\n        id: '',\n        username: '',\n        role: 2\n      },\n      addUserRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 12,\n          message: '用户名应当在4到12之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('请输入密码'));\n            }\n            if (value.length < 6 || value.length > 20) {\n              callback(new Error('密码应当在6到20为之间'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        checkpass: [{\n          validator: (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('请输入密码'));\n            }\n            if (value !== this.newuser.password) {\n              callback(new Error('密码不一致，请重新输入'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      },\n      addUserVisible: false,\n      editUserVisible: false,\n      visible: false\n    };\n  },\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get('users', {\n        params: {\n          username: this.queryParam.username,\n          pagesize: this.queryParam.pagesize,\n          pagenum: this.queryParam.pagenum\n        }\n      });\n      if (res.status !== 200) return this.$message.error(res.message);\n      this.userList = res.data;\n      this.pagination.total = res.total;\n    },\n    // 修改分页时触发\n    handleTableChange(pagination, filters, sorter) {\n      const pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      pager.pageSize = pagination.pageSize;\n      this.queryParam.pagesize = pagination.pageSize;\n      this.queryParam.pagenum = pagination.current;\n      if (pagination.pageSize !== this.pagination.pageSize) {\n        this.queryParam.pagenum = 1;\n        pager.current = 1;\n      }\n      this.pagination = pager;\n      this.getUserList();\n    },\n    // 删除用户\n    deleteUser(id) {\n      this.$confirm({\n        title: '确定删除该用户吗？',\n        content: '一旦删除，无法恢复',\n        onOk: async () => {\n          const {\n            data: res\n          } = await this.$http.delete(`user/${id}`);\n          console.log(res);\n          if (res.status !== 200) return this.$message.error(res.message);\n          this.$message.success('删除成功');\n          this.getUserList();\n        },\n        onCancel: async () => {\n          this.$message.info('已取消删除');\n        }\n      });\n    },\n    // 新增用户\n    addUserOk() {\n      this.$refs.addUserRef.validate(async valid => {\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入');\n        const {\n          data: res\n        } = await this.$http.post('/user/add', {\n          username: this.newuser.username,\n          password: this.newuser.password,\n          role: this.newuser.role\n        });\n        console.log(res);\n        if (res.status !== 200) return this.$message.error(res.message);\n        this.addUserVisible = false;\n        this.$message.info('添加用户成功');\n        this.getUserList();\n      });\n    },\n    addUserCancel() {\n      this.$refs.addUserRef.resetFields();\n      this.addUserVisible = false;\n      this.$message.info('新增用户已取消');\n    },\n    adminChange(value) {\n      this.newuser.role = value;\n    },\n    // 编辑用户\n    async editUser(id) {\n      this.editUserVisible = true;\n      const {\n        data: res\n      } = await this.$http.get(`/user/${id}`);\n      if (res.status !== 200) this.$message.error(res.message);\n      this.userinfo.username = res.data.username;\n      this.userinfo.role = res.data.role;\n      this.userinfo.id = id;\n    },\n    editUserOk() {},\n    editUserCancel() {\n      this.editUserVisible = false;\n      this.$refs.editUserRef.resetFields();\n      this.$message.info('编辑已取消');\n    }\n  }\n};","map":{"version":3,"names":["columns","title","dataIndex","width","key","align","scopedSlots","customRender","data","pagination","pageSizeOptions","defaultCurrent","defaultPageSize","total","showSizeChanger","showTotal","userList","queryParam","username","pagesize","pagenum","newuser","password","checkpass","role","userinfo","id","addUserRules","required","message","trigger","min","max","validator","rule","value","callback","Error","length","addUserVisible","editUserVisible","visible","created","getUserList","methods","res","$http","get","params","status","$message","error","handleTableChange","filters","sorter","pager","current","pageSize","deleteUser","$confirm","content","onOk","delete","console","log","success","onCancel","info","addUserOk","$refs","addUserRef","validate","valid","post","addUserCancel","resetFields","adminChange","editUser","editUserOk","editUserCancel","editUserRef"],"sources":["src/components/user/UserList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h3>用户列表</h3>\r\n        <a-card>\r\n            <a-row :gutter=\"20\">\r\n                <a-col :span=\"6\">\r\n                    <a-input-search\r\n                    v-model=\"queryParam.username\"\r\n                    placeholder=\"输入用户名查找\"\r\n                    enter-button\r\n                    allowClear\r\n                    @search=\"getUserList\"/>\r\n                </a-col>\r\n                <a-col :span=\"4\">\r\n                    <a-button type=\"primary\" @click=\"addUserVisible=true\">新增</a-button>\r\n                </a-col>\r\n            </a-row>\r\n\r\n            <a-table\r\n            :columns=\"columns\"\r\n            :pagination='pagination'\r\n            :dataSource=\"userList\"\r\n            rowKey=\"ID\"\r\n            bordered\r\n            @change=\"handleTableChange\"\r\n            >\r\n            <span slot=\"role\" slot-scope=\"role\">{{ role==1?'管理员':'订阅者' }}</span>\r\n            <template slot=\"action\" slot-scope=\"data\">\r\n                <div class=\"actionSlot\">\r\n                    <a-button type=\"primary\" style=\"margin-right:15px\" @click=\"editUser(data.ID)\">编辑</a-button>\r\n                    <a-button type=\"danger\" @click=\"deleteUser(data.ID)\">删除</a-button>\r\n                </div>\r\n            </template>\r\n            </a-table>\r\n        </a-card>\r\n      <!--   新增用户区域   -->\r\n      <a-modal\r\n      closable\r\n      :visible=\"addUserVisible\"\r\n      width=\"60%\"\r\n      title=\"新增用户\"\r\n      @ok=\"addUserOk\"\r\n      @cancel=\"addUserCancel\"\r\n      >\r\n      <a-form-model :model=\"newuser\" :rules=\"addUserRules\" ref=\"addUserRef\">\r\n        <a-form-model-item label=\"用户名\" prop=\"username\">\r\n          <a-input v-model=\"newuser.username\"></a-input>\r\n        </a-form-model-item>\r\n        <a-form-model-item has-feedback label=\"密码\" prop=\"password\">\r\n          <a-input-password v-model=\"newuser.password\"></a-input-password>\r\n        </a-form-model-item>\r\n        <a-form-model-item has-feedback label=\"确认密码\" prop=\"checkpass\">\r\n          <a-input-password v-model=\"newuser.checkpass\"></a-input-password>\r\n        </a-form-model-item>\r\n        <a-form-model-item label=\"是否为管理员\" prop=\"role\">\r\n          <a-select defaultValue=\"2\" style=\"120px\" @change=\"adminChange\">\r\n            <a-select-option key=\"1\" value=\"1\">是</a-select-option>\r\n            <a-select-option key=\"2\" value=\"2\">否</a-select-option>\r\n          </a-select>\r\n        </a-form-model-item>\r\n      </a-form-model>\r\n      </a-modal>\r\n      <!--   编辑用户区域   -->\r\n      <a-modal\r\n        closable\r\n        :visible=\"editUserVisible\"\r\n        width=\"60%\"\r\n        title=\"编辑用户\"\r\n        @ok=\"editUserOk\"\r\n        @cancel=\"editUserCancel\"\r\n        >\r\n        <a-form-model :model=\"userinfo\" :rules=\"editUserRules\" ref=\"editUserRef\">\r\n          <a-form-model-item label=\"用户名\" prop=\"username\">\r\n            <a-input v-model=\"userinfo.username\"></a-input>\r\n          </a-form-model-item>\r\n          <a-form-model-item label=\"是否为管理员\" prop=\"role\">\r\n            <a-select defaultValue=\"2\" style=\"120px\" @change=\"adminChange\">\r\n              <a-select-option key=\"1\" value=\"1\">是</a-select-option>\r\n              <a-select-option key=\"2\" value=\"2\">否</a-select-option>\r\n            </a-select>\r\n          </a-form-model-item>\r\n        </a-form-model>\r\n        </a-modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst columns = [\r\n  {\r\n    title: 'ID',\r\n    dataIndex: 'ID',\r\n    width: '10%',\r\n    key: 'id',\r\n    align: 'center'\r\n  },\r\n  {\r\n    title: '用户名',\r\n    dataIndex: 'username',\r\n    width: '20%',\r\n    key: 'username',\r\n    align: 'center'\r\n  },\r\n  {\r\n    title: '角色',\r\n    dataIndex: 'role',\r\n    width: '20%',\r\n    key: 'role',\r\n    align: 'center',\r\n    scopedSlots: { customRender: 'role' }\r\n  },\r\n  {\r\n    title: '操作',\r\n    width: '30%',\r\n    key: 'action',\r\n    align: 'center',\r\n    scopedSlots: { customRender: 'action' }\r\n  }\r\n]\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      pagination: {\r\n        pageSizeOptions: ['5', '10', '20'],\r\n        defaultCurrent: 1,\r\n        defaultPageSize: 5,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`\r\n      },\r\n      userList: [],\r\n      columns,\r\n      queryParam: {\r\n        username: '',\r\n        pagesize: 5,\r\n        pagenum: 1\r\n      },\r\n      newuser: {\r\n        username: '',\r\n        password: '',\r\n        checkpass: '',\r\n        role: 2\r\n      },\r\n      userinfo: {\r\n        id: '',\r\n        username: '',\r\n        role: 2\r\n      },\r\n      addUserRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 4, max: 12, message: '用户名应当在4到12之间', trigger: 'blur' }\r\n        ],\r\n        password: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value === '') {\r\n              callback(new Error('请输入密码'))\r\n            }\r\n            if (value.length < 6 || value.length > 20) {\r\n              callback(new Error('密码应当在6到20为之间'))\r\n            } else {\r\n              callback()\r\n            }\r\n          },\r\n          trigger: 'blur'\r\n        }],\r\n        checkpass: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value === '') {\r\n              callback(new Error('请输入密码'))\r\n            }\r\n            if (value !== this.newuser.password) {\r\n              callback(new Error('密码不一致，请重新输入'))\r\n            } else {\r\n              callback()\r\n            }\r\n          },\r\n          trigger: 'blur'\r\n        }]\r\n      },\r\n      addUserVisible: false,\r\n      editUserVisible: false,\r\n      visible: false\r\n    }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    async getUserList () {\r\n      const { data: res } = await this.$http.get('users', {\r\n        params: {\r\n          username: this.queryParam.username,\r\n          pagesize: this.queryParam.pagesize,\r\n          pagenum: this.queryParam.pagenum\r\n        }\r\n      })\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.userList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n    // 修改分页时触发\r\n    handleTableChange (pagination, filters, sorter) {\r\n      const pager = { ...this.pagination }\r\n      pager.current = pagination.current\r\n      pager.pageSize = pagination.pageSize\r\n      this.queryParam.pagesize = pagination.pageSize\r\n      this.queryParam.pagenum = pagination.current\r\n\r\n      if (pagination.pageSize !== this.pagination.pageSize) {\r\n        this.queryParam.pagenum = 1\r\n        pager.current = 1\r\n      }\r\n      this.pagination = pager\r\n      this.getUserList()\r\n    },\r\n    // 删除用户\r\n    deleteUser (id) {\r\n      this.$confirm({\r\n        title: '确定删除该用户吗？',\r\n        content: '一旦删除，无法恢复',\r\n        onOk: async () => {\r\n          const { data: res } = await this.$http.delete(`user/${id}`)\r\n          console.log(res)\r\n          if (res.status !== 200) return this.$message.error(res.message)\r\n          this.$message.success('删除成功')\r\n          this.getUserList()\r\n        },\r\n        onCancel: async () => {\r\n          this.$message.info('已取消删除')\r\n        }\r\n      })\r\n    },\r\n    // 新增用户\r\n    addUserOk () {\r\n      this.$refs.addUserRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.post('/user/add', {\r\n          username: this.newuser.username,\r\n          password: this.newuser.password,\r\n          role: this.newuser.role\r\n        })\r\n        console.log(res)\r\n        if (res.status !== 200) return this.$message.error(res.message)\r\n        this.addUserVisible = false\r\n        this.$message.info('添加用户成功')\r\n        this.getUserList()\r\n      })\r\n    },\r\n    addUserCancel () {\r\n      this.$refs.addUserRef.resetFields()\r\n      this.addUserVisible = false\r\n      this.$message.info('新增用户已取消')\r\n    },\r\n    adminChange (value) {\r\n      this.newuser.role = value\r\n    },\r\n    // 编辑用户\r\n    async editUser (id) {\r\n      this.editUserVisible = true\r\n      const { data: res } = await this.$http.get(`/user/${id}`)\r\n      if (res.status !== 200) this.$message.error(res.message)\r\n      this.userinfo.username = res.data.username\r\n      this.userinfo.role = res.data.role\r\n      this.userinfo.id = id\r\n    },\r\n    editUserOk () {\r\n\r\n    },\r\n    editUserCancel () {\r\n      this.editUserVisible = false\r\n      this.$refs.editUserRef.resetFields()\r\n      this.$message.info('编辑已取消')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.actionSlot{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}